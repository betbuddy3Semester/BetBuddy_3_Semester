using Model_Objects;

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data_Acess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dmaa0215_2Sem_4")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAreaOfResponsibility(AreaOfResponsibility instance);
    partial void UpdateAreaOfResponsibility(AreaOfResponsibility instance);
    partial void DeleteAreaOfResponsibility(AreaOfResponsibility instance);
    partial void InsertCase(Case instance);
    partial void UpdateCase(Case instance);
    partial void DeleteCase(Case instance);
    partial void InsertCrimeScene(CrimeScene instance);
    partial void UpdateCrimeScene(CrimeScene instance);
    partial void DeleteCrimeScene(CrimeScene instance);
    partial void InsertGRID(GRID instance);
    partial void UpdateGRID(GRID instance);
    partial void DeleteGRID(GRID instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertStatement(Statement instance);
    partial void UpdateStatement(Statement instance);
    partial void DeleteStatement(Statement instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    #endregion
		public DatabaseDataContext() : 
				base(global::Data_Acess.Properties.Settings.Default.dmaa0215_2Sem_4ConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Kartoffel> Kartoffels
		{
			get
			{
				return this.GetTable<Kartoffel>();
			}
		}
		
		public System.Data.Linq.Table<unitPerson> unitPersons
		{
			get
			{
				return this.GetTable<unitPerson>();
			}
		}
		
		public System.Data.Linq.Table<AreaOfResponsibility> AreaOfResponsibilities
		{
			get
			{
				return this.GetTable<AreaOfResponsibility>();
			}
		}
		
		public System.Data.Linq.Table<Case> Cases
		{
			get
			{
				return this.GetTable<Case>();
			}
		}
		
		public System.Data.Linq.Table<CaseUnit> CaseUnits
		{
			get
			{
				return this.GetTable<CaseUnit>();
			}
		}
		
		public System.Data.Linq.Table<CrimeScene> CrimeScenes
		{
			get
			{
				return this.GetTable<CrimeScene>();
			}
		}
		
		public System.Data.Linq.Table<Email> Emails
		{
			get
			{
				return this.GetTable<Email>();
			}
		}
		
		public System.Data.Linq.Table<GRID> GRIDs
		{
			get
			{
				return this.GetTable<GRID>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<PhoneNo> PhoneNos
		{
			get
			{
				return this.GetTable<PhoneNo>();
			}
		}
		
		public System.Data.Linq.Table<Statement> Statements
		{
			get
			{
				return this.GetTable<Statement>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Kartoffel : IEntity
	{
		
		private string _Navn;
		
		private int _Id;
		
		public Kartoffel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Navn", CanBeNull=false)]
		public string Navn
		{
			get
			{
				return this._Navn;
			}
			set
			{
				if ((this._Navn != value))
				{
					this._Navn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.unitPerson")]
	public partial class unitPerson
	{
		
		private System.Nullable<int> _unitID;
		
		private System.Nullable<int> _personID;
		
		public unitPerson()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", DbType="Int")]
		public System.Nullable<int> unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					this._unitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personID", DbType="Int")]
		public System.Nullable<int> personID
		{
			get
			{
				return this._personID;
			}
			set
			{
				if ((this._personID != value))
				{
					this._personID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AreaOfResponsibility")]
	public partial class AreaOfResponsibility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _aorID;
		
		private string _areaName;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Unit> _Units;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaorIDChanging(int value);
    partial void OnaorIDChanged();
    partial void OnareaNameChanging(string value);
    partial void OnareaNameChanged();
    #endregion
		
		public AreaOfResponsibility()
		{
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Units = new EntitySet<Unit>(new Action<Unit>(this.attach_Units), new Action<Unit>(this.detach_Units));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int aorID
		{
			get
			{
				return this._aorID;
			}
			set
			{
				if ((this._aorID != value))
				{
					this.OnaorIDChanging(value);
					this.SendPropertyChanging();
					this._aorID = value;
					this.SendPropertyChanged("aorID");
					this.OnaorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_areaName", DbType="VarChar(MAX)")]
		public string areaName
		{
			get
			{
				return this._areaName;
			}
			set
			{
				if ((this._areaName != value))
				{
					this.OnareaNameChanging(value);
					this.SendPropertyChanging();
					this._areaName = value;
					this.SendPropertyChanged("areaName");
					this.OnareaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaOfResponsibility_Person", Storage="_Persons", ThisKey="aorID", OtherKey="aor")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaOfResponsibility_Unit", Storage="_Units", ThisKey="aorID", OtherKey="aor")]
		public EntitySet<Unit> Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				this._Units.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.AreaOfResponsibility = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.AreaOfResponsibility = null;
		}
		
		private void attach_Units(Unit entity)
		{
			this.SendPropertyChanging();
			entity.AreaOfResponsibility = this;
		}
		
		private void detach_Units(Unit entity)
		{
			this.SendPropertyChanging();
			entity.AreaOfResponsibility = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cases")]
	public partial class Case : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _caseID;
		
		private System.Nullable<bool> _status;
		
		private System.Nullable<int> _caseCreator;
		
		private System.Nullable<int> _unitID;
		
		private EntitySet<CrimeScene> _CrimeScenes;
		
		private EntitySet<Statement> _Statements;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Unit> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncaseIDChanging(int value);
    partial void OncaseIDChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    partial void OncaseCreatorChanging(System.Nullable<int> value);
    partial void OncaseCreatorChanged();
    partial void OnunitIDChanging(System.Nullable<int> value);
    partial void OnunitIDChanged();
    #endregion
		
		public Case()
		{
			this._CrimeScenes = new EntitySet<CrimeScene>(new Action<CrimeScene>(this.attach_CrimeScenes), new Action<CrimeScene>(this.detach_CrimeScenes));
			this._Statements = new EntitySet<Statement>(new Action<Statement>(this.attach_Statements), new Action<Statement>(this.detach_Statements));
			this._Person = default(EntityRef<Person>);
			this._Unit = default(EntityRef<Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int caseID
		{
			get
			{
				return this._caseID;
			}
			set
			{
				if ((this._caseID != value))
				{
					this.OncaseIDChanging(value);
					this.SendPropertyChanging();
					this._caseID = value;
					this.SendPropertyChanged("caseID");
					this.OncaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseCreator", DbType="Int")]
		public System.Nullable<int> caseCreator
		{
			get
			{
				return this._caseCreator;
			}
			set
			{
				if ((this._caseCreator != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaseCreatorChanging(value);
					this.SendPropertyChanging();
					this._caseCreator = value;
					this.SendPropertyChanged("caseCreator");
					this.OncaseCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", DbType="Int")]
		public System.Nullable<int> unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					if (this._Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnunitIDChanging(value);
					this.SendPropertyChanging();
					this._unitID = value;
					this.SendPropertyChanged("unitID");
					this.OnunitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Case_CrimeScene", Storage="_CrimeScenes", ThisKey="caseID", OtherKey="caseID")]
		public EntitySet<CrimeScene> CrimeScenes
		{
			get
			{
				return this._CrimeScenes;
			}
			set
			{
				this._CrimeScenes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Case_Statement", Storage="_Statements", ThisKey="caseID", OtherKey="caseID")]
		public EntitySet<Statement> Statements
		{
			get
			{
				return this._Statements;
			}
			set
			{
				this._Statements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Case", Storage="_Person", ThisKey="caseCreator", OtherKey="personID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Cases.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Cases.Add(this);
						this._caseCreator = value.personID;
					}
					else
					{
						this._caseCreator = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Case", Storage="_Unit", ThisKey="unitID", OtherKey="unitID", IsForeignKey=true)]
		public Unit Unit
		{
			get
			{
				return this._Unit.Entity;
			}
			set
			{
				Unit previousValue = this._Unit.Entity;
				if (((previousValue != value) 
							|| (this._Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit.Entity = null;
						previousValue.Cases.Remove(this);
					}
					this._Unit.Entity = value;
					if ((value != null))
					{
						value.Cases.Add(this);
						this._unitID = value.unitID;
					}
					else
					{
						this._unitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrimeScenes(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.Case = this;
		}
		
		private void detach_CrimeScenes(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.Case = null;
		}
		
		private void attach_Statements(Statement entity)
		{
			this.SendPropertyChanging();
			entity.Case = this;
		}
		
		private void detach_Statements(Statement entity)
		{
			this.SendPropertyChanging();
			entity.Case = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CaseUnits")]
	public partial class CaseUnit
	{
		
		private System.Nullable<int> _unitID;
		
		private System.Nullable<int> _caseID;
		
		private System.Nullable<bool> _isPrimary;
		
		private System.Nullable<int> _members;
		
		private string _transport;
		
		private System.Nullable<bool> _armed;
		
		public CaseUnit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", DbType="Int")]
		public System.Nullable<int> unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					this._unitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseID", DbType="Int")]
		public System.Nullable<int> caseID
		{
			get
			{
				return this._caseID;
			}
			set
			{
				if ((this._caseID != value))
				{
					this._caseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPrimary", DbType="Bit")]
		public System.Nullable<bool> isPrimary
		{
			get
			{
				return this._isPrimary;
			}
			set
			{
				if ((this._isPrimary != value))
				{
					this._isPrimary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_members", DbType="Int")]
		public System.Nullable<int> members
		{
			get
			{
				return this._members;
			}
			set
			{
				if ((this._members != value))
				{
					this._members = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transport", DbType="VarChar(MAX)")]
		public string transport
		{
			get
			{
				return this._transport;
			}
			set
			{
				if ((this._transport != value))
				{
					this._transport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_armed", DbType="Bit")]
		public System.Nullable<bool> armed
		{
			get
			{
				return this._armed;
			}
			set
			{
				if ((this._armed != value))
				{
					this._armed = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrimeScene")]
	public partial class CrimeScene : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _crimeID;
		
		private System.Nullable<int> _grid;
		
		private System.Nullable<int> _entryPoint;
		
		private System.Nullable<int> _exitPoint;
		
		private string _GSA;
		
		private string _pictures;
		
		private System.Nullable<int> _POO;
		
		private string _pMethods;
		
		private System.Nullable<int> _caseID;
		
		private string _forensically;
		
		private string _fingerprints;
		
		private string _footprints;
		
		private string _DNA;
		
		private string _humanDiscard;
		
		private string _ammo;
		
		private string _animalState;
		
		private EntityRef<Case> _Case;
		
		private EntityRef<GRID> _GRID1;
		
		private EntityRef<GRID> _GRID2;
		
		private EntityRef<GRID> _GRID3;
		
		private EntityRef<GRID> _GRID4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncrimeIDChanging(int value);
    partial void OncrimeIDChanged();
    partial void OngridChanging(System.Nullable<int> value);
    partial void OngridChanged();
    partial void OnentryPointChanging(System.Nullable<int> value);
    partial void OnentryPointChanged();
    partial void OnexitPointChanging(System.Nullable<int> value);
    partial void OnexitPointChanged();
    partial void OnGSAChanging(string value);
    partial void OnGSAChanged();
    partial void OnpicturesChanging(string value);
    partial void OnpicturesChanged();
    partial void OnPOOChanging(System.Nullable<int> value);
    partial void OnPOOChanged();
    partial void OnpMethodsChanging(string value);
    partial void OnpMethodsChanged();
    partial void OncaseIDChanging(System.Nullable<int> value);
    partial void OncaseIDChanged();
    partial void OnforensicallyChanging(string value);
    partial void OnforensicallyChanged();
    partial void OnfingerprintsChanging(string value);
    partial void OnfingerprintsChanged();
    partial void OnfootprintsChanging(string value);
    partial void OnfootprintsChanged();
    partial void OnDNAChanging(string value);
    partial void OnDNAChanged();
    partial void OnhumanDiscardChanging(string value);
    partial void OnhumanDiscardChanged();
    partial void OnammoChanging(string value);
    partial void OnammoChanged();
    partial void OnanimalStateChanging(string value);
    partial void OnanimalStateChanged();
    #endregion
		
		public CrimeScene()
		{
			this._Case = default(EntityRef<Case>);
			this._GRID1 = default(EntityRef<GRID>);
			this._GRID2 = default(EntityRef<GRID>);
			this._GRID3 = default(EntityRef<GRID>);
			this._GRID4 = default(EntityRef<GRID>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crimeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int crimeID
		{
			get
			{
				return this._crimeID;
			}
			set
			{
				if ((this._crimeID != value))
				{
					this.OncrimeIDChanging(value);
					this.SendPropertyChanging();
					this._crimeID = value;
					this.SendPropertyChanged("crimeID");
					this.OncrimeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grid", DbType="Int")]
		public System.Nullable<int> grid
		{
			get
			{
				return this._grid;
			}
			set
			{
				if ((this._grid != value))
				{
					if (this._GRID3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngridChanging(value);
					this.SendPropertyChanging();
					this._grid = value;
					this.SendPropertyChanged("grid");
					this.OngridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entryPoint", DbType="Int")]
		public System.Nullable<int> entryPoint
		{
			get
			{
				return this._entryPoint;
			}
			set
			{
				if ((this._entryPoint != value))
				{
					if (this._GRID1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnentryPointChanging(value);
					this.SendPropertyChanging();
					this._entryPoint = value;
					this.SendPropertyChanged("entryPoint");
					this.OnentryPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exitPoint", DbType="Int")]
		public System.Nullable<int> exitPoint
		{
			get
			{
				return this._exitPoint;
			}
			set
			{
				if ((this._exitPoint != value))
				{
					if (this._GRID2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnexitPointChanging(value);
					this.SendPropertyChanging();
					this._exitPoint = value;
					this.SendPropertyChanged("exitPoint");
					this.OnexitPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSA", DbType="VarChar(MAX)")]
		public string GSA
		{
			get
			{
				return this._GSA;
			}
			set
			{
				if ((this._GSA != value))
				{
					this.OnGSAChanging(value);
					this.SendPropertyChanging();
					this._GSA = value;
					this.SendPropertyChanged("GSA");
					this.OnGSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pictures", DbType="VarChar(MAX)")]
		public string pictures
		{
			get
			{
				return this._pictures;
			}
			set
			{
				if ((this._pictures != value))
				{
					this.OnpicturesChanging(value);
					this.SendPropertyChanging();
					this._pictures = value;
					this.SendPropertyChanged("pictures");
					this.OnpicturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POO", DbType="Int")]
		public System.Nullable<int> POO
		{
			get
			{
				return this._POO;
			}
			set
			{
				if ((this._POO != value))
				{
					if (this._GRID4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPOOChanging(value);
					this.SendPropertyChanging();
					this._POO = value;
					this.SendPropertyChanged("POO");
					this.OnPOOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pMethods", DbType="VarChar(MAX)")]
		public string pMethods
		{
			get
			{
				return this._pMethods;
			}
			set
			{
				if ((this._pMethods != value))
				{
					this.OnpMethodsChanging(value);
					this.SendPropertyChanging();
					this._pMethods = value;
					this.SendPropertyChanged("pMethods");
					this.OnpMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseID", DbType="Int")]
		public System.Nullable<int> caseID
		{
			get
			{
				return this._caseID;
			}
			set
			{
				if ((this._caseID != value))
				{
					if (this._Case.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaseIDChanging(value);
					this.SendPropertyChanging();
					this._caseID = value;
					this.SendPropertyChanged("caseID");
					this.OncaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forensically", DbType="VarChar(MAX)")]
		public string forensically
		{
			get
			{
				return this._forensically;
			}
			set
			{
				if ((this._forensically != value))
				{
					this.OnforensicallyChanging(value);
					this.SendPropertyChanging();
					this._forensically = value;
					this.SendPropertyChanged("forensically");
					this.OnforensicallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fingerprints", DbType="VarChar(MAX)")]
		public string fingerprints
		{
			get
			{
				return this._fingerprints;
			}
			set
			{
				if ((this._fingerprints != value))
				{
					this.OnfingerprintsChanging(value);
					this.SendPropertyChanging();
					this._fingerprints = value;
					this.SendPropertyChanged("fingerprints");
					this.OnfingerprintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_footprints", DbType="VarChar(MAX)")]
		public string footprints
		{
			get
			{
				return this._footprints;
			}
			set
			{
				if ((this._footprints != value))
				{
					this.OnfootprintsChanging(value);
					this.SendPropertyChanging();
					this._footprints = value;
					this.SendPropertyChanged("footprints");
					this.OnfootprintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNA", DbType="VarChar(MAX)")]
		public string DNA
		{
			get
			{
				return this._DNA;
			}
			set
			{
				if ((this._DNA != value))
				{
					this.OnDNAChanging(value);
					this.SendPropertyChanging();
					this._DNA = value;
					this.SendPropertyChanged("DNA");
					this.OnDNAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_humanDiscard", DbType="VarChar(MAX)")]
		public string humanDiscard
		{
			get
			{
				return this._humanDiscard;
			}
			set
			{
				if ((this._humanDiscard != value))
				{
					this.OnhumanDiscardChanging(value);
					this.SendPropertyChanging();
					this._humanDiscard = value;
					this.SendPropertyChanged("humanDiscard");
					this.OnhumanDiscardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ammo", DbType="VarChar(MAX)")]
		public string ammo
		{
			get
			{
				return this._ammo;
			}
			set
			{
				if ((this._ammo != value))
				{
					this.OnammoChanging(value);
					this.SendPropertyChanging();
					this._ammo = value;
					this.SendPropertyChanged("ammo");
					this.OnammoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_animalState", DbType="VarChar(MAX)")]
		public string animalState
		{
			get
			{
				return this._animalState;
			}
			set
			{
				if ((this._animalState != value))
				{
					this.OnanimalStateChanging(value);
					this.SendPropertyChanging();
					this._animalState = value;
					this.SendPropertyChanged("animalState");
					this.OnanimalStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Case_CrimeScene", Storage="_Case", ThisKey="caseID", OtherKey="caseID", IsForeignKey=true)]
		public Case Case
		{
			get
			{
				return this._Case.Entity;
			}
			set
			{
				Case previousValue = this._Case.Entity;
				if (((previousValue != value) 
							|| (this._Case.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Case.Entity = null;
						previousValue.CrimeScenes.Remove(this);
					}
					this._Case.Entity = value;
					if ((value != null))
					{
						value.CrimeScenes.Add(this);
						this._caseID = value.caseID;
					}
					else
					{
						this._caseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Case");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRID_CrimeScene", Storage="_GRID1", ThisKey="entryPoint", OtherKey="gridID", IsForeignKey=true)]
		public GRID GRID1
		{
			get
			{
				return this._GRID1.Entity;
			}
			set
			{
				GRID previousValue = this._GRID1.Entity;
				if (((previousValue != value) 
							|| (this._GRID1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRID1.Entity = null;
						previousValue.CrimeScenes.Remove(this);
					}
					this._GRID1.Entity = value;
					if ((value != null))
					{
						value.CrimeScenes.Add(this);
						this._entryPoint = value.gridID;
					}
					else
					{
						this._entryPoint = default(Nullable<int>);
					}
					this.SendPropertyChanged("GRID1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRID_CrimeScene1", Storage="_GRID2", ThisKey="exitPoint", OtherKey="gridID", IsForeignKey=true)]
		public GRID GRID2
		{
			get
			{
				return this._GRID2.Entity;
			}
			set
			{
				GRID previousValue = this._GRID2.Entity;
				if (((previousValue != value) 
							|| (this._GRID2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRID2.Entity = null;
						previousValue.CrimeScenes1.Remove(this);
					}
					this._GRID2.Entity = value;
					if ((value != null))
					{
						value.CrimeScenes1.Add(this);
						this._exitPoint = value.gridID;
					}
					else
					{
						this._exitPoint = default(Nullable<int>);
					}
					this.SendPropertyChanged("GRID2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRID_CrimeScene2", Storage="_GRID3", ThisKey="grid", OtherKey="gridID", IsForeignKey=true)]
		public GRID GRID3
		{
			get
			{
				return this._GRID3.Entity;
			}
			set
			{
				GRID previousValue = this._GRID3.Entity;
				if (((previousValue != value) 
							|| (this._GRID3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRID3.Entity = null;
						previousValue.CrimeScenes2.Remove(this);
					}
					this._GRID3.Entity = value;
					if ((value != null))
					{
						value.CrimeScenes2.Add(this);
						this._grid = value.gridID;
					}
					else
					{
						this._grid = default(Nullable<int>);
					}
					this.SendPropertyChanged("GRID3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRID_CrimeScene3", Storage="_GRID4", ThisKey="POO", OtherKey="gridID", IsForeignKey=true)]
		public GRID GRID4
		{
			get
			{
				return this._GRID4.Entity;
			}
			set
			{
				GRID previousValue = this._GRID4.Entity;
				if (((previousValue != value) 
							|| (this._GRID4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRID4.Entity = null;
						previousValue.CrimeScenes3.Remove(this);
					}
					this._GRID4.Entity = value;
					if ((value != null))
					{
						value.CrimeScenes3.Add(this);
						this._POO = value.gridID;
					}
					else
					{
						this._POO = default(Nullable<int>);
					}
					this.SendPropertyChanged("GRID4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Email")]
	public partial class Email
	{
		
		private System.Nullable<int> _personID;
		
		private string _email1;
		
		public Email()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personID", DbType="Int")]
		public System.Nullable<int> personID
		{
			get
			{
				return this._personID;
			}
			set
			{
				if ((this._personID != value))
				{
					this._personID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email", Storage="_email1", DbType="VarChar(MAX)")]
		public string email1
		{
			get
			{
				return this._email1;
			}
			set
			{
				if ((this._email1 != value))
				{
					this._email1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GRID")]
	public partial class GRID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gridID;
		
		private System.Nullable<decimal> _x;
		
		private System.Nullable<decimal> _y;
		
		private EntitySet<CrimeScene> _CrimeScenes;
		
		private EntitySet<CrimeScene> _CrimeScenes1;
		
		private EntitySet<CrimeScene> _CrimeScenes2;
		
		private EntitySet<CrimeScene> _CrimeScenes3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngridIDChanging(int value);
    partial void OngridIDChanged();
    partial void OnxChanging(System.Nullable<decimal> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<decimal> value);
    partial void OnyChanged();
    #endregion
		
		public GRID()
		{
			this._CrimeScenes = new EntitySet<CrimeScene>(new Action<CrimeScene>(this.attach_CrimeScenes), new Action<CrimeScene>(this.detach_CrimeScenes));
			this._CrimeScenes1 = new EntitySet<CrimeScene>(new Action<CrimeScene>(this.attach_CrimeScenes1), new Action<CrimeScene>(this.detach_CrimeScenes1));
			this._CrimeScenes2 = new EntitySet<CrimeScene>(new Action<CrimeScene>(this.attach_CrimeScenes2), new Action<CrimeScene>(this.detach_CrimeScenes2));
			this._CrimeScenes3 = new EntitySet<CrimeScene>(new Action<CrimeScene>(this.attach_CrimeScenes3), new Action<CrimeScene>(this.detach_CrimeScenes3));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gridID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int gridID
		{
			get
			{
				return this._gridID;
			}
			set
			{
				if ((this._gridID != value))
				{
					this.OngridIDChanging(value);
					this.SendPropertyChanging();
					this._gridID = value;
					this.SendPropertyChanged("gridID");
					this.OngridIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Decimal(16,14)")]
		public System.Nullable<decimal> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Decimal(16,14)")]
		public System.Nullable<decimal> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRID_CrimeScene", Storage="_CrimeScenes", ThisKey="gridID", OtherKey="entryPoint")]
		public EntitySet<CrimeScene> CrimeScenes
		{
			get
			{
				return this._CrimeScenes;
			}
			set
			{
				this._CrimeScenes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRID_CrimeScene1", Storage="_CrimeScenes1", ThisKey="gridID", OtherKey="exitPoint")]
		public EntitySet<CrimeScene> CrimeScenes1
		{
			get
			{
				return this._CrimeScenes1;
			}
			set
			{
				this._CrimeScenes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRID_CrimeScene2", Storage="_CrimeScenes2", ThisKey="gridID", OtherKey="grid")]
		public EntitySet<CrimeScene> CrimeScenes2
		{
			get
			{
				return this._CrimeScenes2;
			}
			set
			{
				this._CrimeScenes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRID_CrimeScene3", Storage="_CrimeScenes3", ThisKey="gridID", OtherKey="POO")]
		public EntitySet<CrimeScene> CrimeScenes3
		{
			get
			{
				return this._CrimeScenes3;
			}
			set
			{
				this._CrimeScenes3.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrimeScenes(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.GRID1 = this;
		}
		
		private void detach_CrimeScenes(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.GRID1 = null;
		}
		
		private void attach_CrimeScenes1(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.GRID2 = this;
		}
		
		private void detach_CrimeScenes1(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.GRID2 = null;
		}
		
		private void attach_CrimeScenes2(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.GRID3 = this;
		}
		
		private void detach_CrimeScenes2(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.GRID3 = null;
		}
		
		private void attach_CrimeScenes3(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.GRID4 = this;
		}
		
		private void detach_CrimeScenes3(CrimeScene entity)
		{
			this.SendPropertyChanging();
			entity.GRID4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _personID;
		
		private string _fName;
		
		private string _lName;
		
		private string _location;
		
		private string _bDate;
		
		private string _gender;
		
		private string _email;
		
		private System.Nullable<int> _phoneNo;
		
		private string _type;
		
		private string _tribe;
		
		private string _classification;
		
		private System.Nullable<int> _aor;
		
		private EntitySet<Case> _Cases;
		
		private EntitySet<Statement> _Statements;
		
		private EntityRef<AreaOfResponsibility> _AreaOfResponsibility;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpersonIDChanging(int value);
    partial void OnpersonIDChanged();
    partial void OnfNameChanging(string value);
    partial void OnfNameChanged();
    partial void OnlNameChanging(string value);
    partial void OnlNameChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnbDateChanging(string value);
    partial void OnbDateChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneNoChanging(System.Nullable<int> value);
    partial void OnphoneNoChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OntribeChanging(string value);
    partial void OntribeChanged();
    partial void OnclassificationChanging(string value);
    partial void OnclassificationChanged();
    partial void OnaorChanging(System.Nullable<int> value);
    partial void OnaorChanged();
    #endregion
		
		public Person()
		{
			this._Cases = new EntitySet<Case>(new Action<Case>(this.attach_Cases), new Action<Case>(this.detach_Cases));
			this._Statements = new EntitySet<Statement>(new Action<Statement>(this.attach_Statements), new Action<Statement>(this.detach_Statements));
			this._AreaOfResponsibility = default(EntityRef<AreaOfResponsibility>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int personID
		{
			get
			{
				return this._personID;
			}
			set
			{
				if ((this._personID != value))
				{
					this.OnpersonIDChanging(value);
					this.SendPropertyChanging();
					this._personID = value;
					this.SendPropertyChanged("personID");
					this.OnpersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fName", DbType="VarChar(MAX)")]
		public string fName
		{
			get
			{
				return this._fName;
			}
			set
			{
				if ((this._fName != value))
				{
					this.OnfNameChanging(value);
					this.SendPropertyChanging();
					this._fName = value;
					this.SendPropertyChanged("fName");
					this.OnfNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lName", DbType="VarChar(MAX)")]
		public string lName
		{
			get
			{
				return this._lName;
			}
			set
			{
				if ((this._lName != value))
				{
					this.OnlNameChanging(value);
					this.SendPropertyChanging();
					this._lName = value;
					this.SendPropertyChanged("lName");
					this.OnlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(MAX)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bDate", DbType="VarChar(MAX)")]
		public string bDate
		{
			get
			{
				return this._bDate;
			}
			set
			{
				if ((this._bDate != value))
				{
					this.OnbDateChanging(value);
					this.SendPropertyChanging();
					this._bDate = value;
					this.SendPropertyChanged("bDate");
					this.OnbDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(MAX)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNo", DbType="Int")]
		public System.Nullable<int> phoneNo
		{
			get
			{
				return this._phoneNo;
			}
			set
			{
				if ((this._phoneNo != value))
				{
					this.OnphoneNoChanging(value);
					this.SendPropertyChanging();
					this._phoneNo = value;
					this.SendPropertyChanged("phoneNo");
					this.OnphoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(MAX)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tribe", DbType="VarChar(MAX)")]
		public string tribe
		{
			get
			{
				return this._tribe;
			}
			set
			{
				if ((this._tribe != value))
				{
					this.OntribeChanging(value);
					this.SendPropertyChanging();
					this._tribe = value;
					this.SendPropertyChanged("tribe");
					this.OntribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classification", DbType="VarChar(MAX)")]
		public string classification
		{
			get
			{
				return this._classification;
			}
			set
			{
				if ((this._classification != value))
				{
					this.OnclassificationChanging(value);
					this.SendPropertyChanging();
					this._classification = value;
					this.SendPropertyChanged("classification");
					this.OnclassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aor", DbType="Int")]
		public System.Nullable<int> aor
		{
			get
			{
				return this._aor;
			}
			set
			{
				if ((this._aor != value))
				{
					if (this._AreaOfResponsibility.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaorChanging(value);
					this.SendPropertyChanging();
					this._aor = value;
					this.SendPropertyChanged("aor");
					this.OnaorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Case", Storage="_Cases", ThisKey="personID", OtherKey="caseCreator")]
		public EntitySet<Case> Cases
		{
			get
			{
				return this._Cases;
			}
			set
			{
				this._Cases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Statement", Storage="_Statements", ThisKey="personID", OtherKey="personID")]
		public EntitySet<Statement> Statements
		{
			get
			{
				return this._Statements;
			}
			set
			{
				this._Statements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaOfResponsibility_Person", Storage="_AreaOfResponsibility", ThisKey="aor", OtherKey="aorID", IsForeignKey=true)]
		public AreaOfResponsibility AreaOfResponsibility
		{
			get
			{
				return this._AreaOfResponsibility.Entity;
			}
			set
			{
				AreaOfResponsibility previousValue = this._AreaOfResponsibility.Entity;
				if (((previousValue != value) 
							|| (this._AreaOfResponsibility.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaOfResponsibility.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._AreaOfResponsibility.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._aor = value.aorID;
					}
					else
					{
						this._aor = default(Nullable<int>);
					}
					this.SendPropertyChanged("AreaOfResponsibility");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cases(Case entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Cases(Case entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Statements(Statement entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Statements(Statement entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhoneNo")]
	public partial class PhoneNo
	{
		
		private System.Nullable<int> _phoneNo1;
		
		private System.Nullable<int> _personID;
		
		public PhoneNo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="phoneNo", Storage="_phoneNo1", DbType="Int")]
		public System.Nullable<int> phoneNo1
		{
			get
			{
				return this._phoneNo1;
			}
			set
			{
				if ((this._phoneNo1 != value))
				{
					this._phoneNo1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personID", DbType="Int")]
		public System.Nullable<int> personID
		{
			get
			{
				return this._personID;
			}
			set
			{
				if ((this._personID != value))
				{
					this._personID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Statement")]
	public partial class Statement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _statementID;
		
		private string _poss;
		
		private string _DOS;
		
		private string _IVO;
		
		private string _timeStamp;
		
		private string _how;
		
		private System.Nullable<int> _amount;
		
		private string _target;
		
		private System.Nullable<bool> _armed;
		
		private System.Nullable<int> _personID;
		
		private System.Nullable<int> _caseID;
		
		private EntityRef<Case> _Case;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstatementIDChanging(int value);
    partial void OnstatementIDChanged();
    partial void OnpossChanging(string value);
    partial void OnpossChanged();
    partial void OnDOSChanging(string value);
    partial void OnDOSChanged();
    partial void OnIVOChanging(string value);
    partial void OnIVOChanged();
    partial void OntimeStampChanging(string value);
    partial void OntimeStampChanged();
    partial void OnhowChanging(string value);
    partial void OnhowChanged();
    partial void OnamountChanging(System.Nullable<int> value);
    partial void OnamountChanged();
    partial void OntargetChanging(string value);
    partial void OntargetChanged();
    partial void OnarmedChanging(System.Nullable<bool> value);
    partial void OnarmedChanged();
    partial void OnpersonIDChanging(System.Nullable<int> value);
    partial void OnpersonIDChanged();
    partial void OncaseIDChanging(System.Nullable<int> value);
    partial void OncaseIDChanged();
    #endregion
		
		public Statement()
		{
			this._Case = default(EntityRef<Case>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statementID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int statementID
		{
			get
			{
				return this._statementID;
			}
			set
			{
				if ((this._statementID != value))
				{
					this.OnstatementIDChanging(value);
					this.SendPropertyChanging();
					this._statementID = value;
					this.SendPropertyChanged("statementID");
					this.OnstatementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_poss", DbType="VarChar(MAX)")]
		public string poss
		{
			get
			{
				return this._poss;
			}
			set
			{
				if ((this._poss != value))
				{
					this.OnpossChanging(value);
					this.SendPropertyChanging();
					this._poss = value;
					this.SendPropertyChanged("poss");
					this.OnpossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOS", DbType="VarChar(MAX)")]
		public string DOS
		{
			get
			{
				return this._DOS;
			}
			set
			{
				if ((this._DOS != value))
				{
					this.OnDOSChanging(value);
					this.SendPropertyChanging();
					this._DOS = value;
					this.SendPropertyChanged("DOS");
					this.OnDOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVO", DbType="VarChar(MAX)")]
		public string IVO
		{
			get
			{
				return this._IVO;
			}
			set
			{
				if ((this._IVO != value))
				{
					this.OnIVOChanging(value);
					this.SendPropertyChanging();
					this._IVO = value;
					this.SendPropertyChanged("IVO");
					this.OnIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStamp", DbType="VarChar(MAX)")]
		public string timeStamp
		{
			get
			{
				return this._timeStamp;
			}
			set
			{
				if ((this._timeStamp != value))
				{
					this.OntimeStampChanging(value);
					this.SendPropertyChanging();
					this._timeStamp = value;
					this.SendPropertyChanged("timeStamp");
					this.OntimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_how", DbType="VarChar(MAX)")]
		public string how
		{
			get
			{
				return this._how;
			}
			set
			{
				if ((this._how != value))
				{
					this.OnhowChanging(value);
					this.SendPropertyChanging();
					this._how = value;
					this.SendPropertyChanged("how");
					this.OnhowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int")]
		public System.Nullable<int> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_target", DbType="VarChar(MAX)")]
		public string target
		{
			get
			{
				return this._target;
			}
			set
			{
				if ((this._target != value))
				{
					this.OntargetChanging(value);
					this.SendPropertyChanging();
					this._target = value;
					this.SendPropertyChanged("target");
					this.OntargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_armed", DbType="Bit")]
		public System.Nullable<bool> armed
		{
			get
			{
				return this._armed;
			}
			set
			{
				if ((this._armed != value))
				{
					this.OnarmedChanging(value);
					this.SendPropertyChanging();
					this._armed = value;
					this.SendPropertyChanged("armed");
					this.OnarmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personID", DbType="Int")]
		public System.Nullable<int> personID
		{
			get
			{
				return this._personID;
			}
			set
			{
				if ((this._personID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpersonIDChanging(value);
					this.SendPropertyChanging();
					this._personID = value;
					this.SendPropertyChanged("personID");
					this.OnpersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseID", DbType="Int")]
		public System.Nullable<int> caseID
		{
			get
			{
				return this._caseID;
			}
			set
			{
				if ((this._caseID != value))
				{
					if (this._Case.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaseIDChanging(value);
					this.SendPropertyChanging();
					this._caseID = value;
					this.SendPropertyChanged("caseID");
					this.OncaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Case_Statement", Storage="_Case", ThisKey="caseID", OtherKey="caseID", IsForeignKey=true)]
		public Case Case
		{
			get
			{
				return this._Case.Entity;
			}
			set
			{
				Case previousValue = this._Case.Entity;
				if (((previousValue != value) 
							|| (this._Case.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Case.Entity = null;
						previousValue.Statements.Remove(this);
					}
					this._Case.Entity = value;
					if ((value != null))
					{
						value.Statements.Add(this);
						this._caseID = value.caseID;
					}
					else
					{
						this._caseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Case");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Statement", Storage="_Person", ThisKey="personID", OtherKey="personID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Statements.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Statements.Add(this);
						this._personID = value.personID;
					}
					else
					{
						this._personID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _unitID;
		
		private string _name;
		
		private System.Nullable<int> _members;
		
		private System.Nullable<int> _aor;
		
		private string _primaryTask;
		
		private string _callSign;
		
		private System.Nullable<bool> _teamLeader;
		
		private EntitySet<Case> _Cases;
		
		private EntityRef<AreaOfResponsibility> _AreaOfResponsibility;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnunitIDChanging(int value);
    partial void OnunitIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmembersChanging(System.Nullable<int> value);
    partial void OnmembersChanged();
    partial void OnaorChanging(System.Nullable<int> value);
    partial void OnaorChanged();
    partial void OnprimaryTaskChanging(string value);
    partial void OnprimaryTaskChanged();
    partial void OncallSignChanging(string value);
    partial void OncallSignChanged();
    partial void OnteamLeaderChanging(System.Nullable<bool> value);
    partial void OnteamLeaderChanged();
    #endregion
		
		public Unit()
		{
			this._Cases = new EntitySet<Case>(new Action<Case>(this.attach_Cases), new Action<Case>(this.detach_Cases));
			this._AreaOfResponsibility = default(EntityRef<AreaOfResponsibility>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					this.OnunitIDChanging(value);
					this.SendPropertyChanging();
					this._unitID = value;
					this.SendPropertyChanged("unitID");
					this.OnunitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_members", DbType="Int")]
		public System.Nullable<int> members
		{
			get
			{
				return this._members;
			}
			set
			{
				if ((this._members != value))
				{
					this.OnmembersChanging(value);
					this.SendPropertyChanging();
					this._members = value;
					this.SendPropertyChanged("members");
					this.OnmembersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aor", DbType="Int")]
		public System.Nullable<int> aor
		{
			get
			{
				return this._aor;
			}
			set
			{
				if ((this._aor != value))
				{
					if (this._AreaOfResponsibility.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaorChanging(value);
					this.SendPropertyChanging();
					this._aor = value;
					this.SendPropertyChanged("aor");
					this.OnaorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryTask", DbType="VarChar(MAX)")]
		public string primaryTask
		{
			get
			{
				return this._primaryTask;
			}
			set
			{
				if ((this._primaryTask != value))
				{
					this.OnprimaryTaskChanging(value);
					this.SendPropertyChanging();
					this._primaryTask = value;
					this.SendPropertyChanged("primaryTask");
					this.OnprimaryTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_callSign", DbType="VarChar(MAX)")]
		public string callSign
		{
			get
			{
				return this._callSign;
			}
			set
			{
				if ((this._callSign != value))
				{
					this.OncallSignChanging(value);
					this.SendPropertyChanging();
					this._callSign = value;
					this.SendPropertyChanged("callSign");
					this.OncallSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teamLeader", DbType="Bit")]
		public System.Nullable<bool> teamLeader
		{
			get
			{
				return this._teamLeader;
			}
			set
			{
				if ((this._teamLeader != value))
				{
					this.OnteamLeaderChanging(value);
					this.SendPropertyChanging();
					this._teamLeader = value;
					this.SendPropertyChanged("teamLeader");
					this.OnteamLeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Case", Storage="_Cases", ThisKey="unitID", OtherKey="unitID")]
		public EntitySet<Case> Cases
		{
			get
			{
				return this._Cases;
			}
			set
			{
				this._Cases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaOfResponsibility_Unit", Storage="_AreaOfResponsibility", ThisKey="aor", OtherKey="aorID", IsForeignKey=true)]
		public AreaOfResponsibility AreaOfResponsibility
		{
			get
			{
				return this._AreaOfResponsibility.Entity;
			}
			set
			{
				AreaOfResponsibility previousValue = this._AreaOfResponsibility.Entity;
				if (((previousValue != value) 
							|| (this._AreaOfResponsibility.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaOfResponsibility.Entity = null;
						previousValue.Units.Remove(this);
					}
					this._AreaOfResponsibility.Entity = value;
					if ((value != null))
					{
						value.Units.Add(this);
						this._aor = value.aorID;
					}
					else
					{
						this._aor = default(Nullable<int>);
					}
					this.SendPropertyChanged("AreaOfResponsibility");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cases(Case entity)
		{
			this.SendPropertyChanging();
			entity.Unit = this;
		}
		
		private void detach_Cases(Case entity)
		{
			this.SendPropertyChanging();
			entity.Unit = null;
		}
	}
}
#pragma warning restore 1591
